#!/bin/bash

if [[ "$#" -lt 1 || "$1" = "-h" ]] ; then
   echo "Usage: $(/usr/bin/basename $0) <input_file> [version] [nproc]"
   echo
   exit 1
fi

input=$1
version=$2
nproc=${NSLOTS}

#######LAUNCHING PROGRAM###########


source SetEnvironment.sh CP2K $version
if [[ $? != "0" ]];then
   echo "Error when exporting CP2K parameters in SetEnvironment.sh"
   exit 1
fi

DIR=$(pwd)
SCRDIR=/scratch/$USER/CP2K_${input}_${JOB_ID}

if [[ -d $SCRDIR ]];then
   echo "ERROR: scratch directory $SCRDIR already exist!"
   exit 1
fi

node=$(uname -n)
date
echo "NODE  $node" > job.log.${JOB_ID}
echo "SCRATCH  $SCRDIR" >> job.log.${JOB_ID}

mkdir $SCRDIR

coord_file=$(grep -i "COORD_FILE_NAME " $input | awk '{printf("%s\n",$2)}')
corepot_file=$(grep -i "POTENTIAL_FILE_NAME " $input | awk '{print $2}')

# Unfortunatelly, BASIS_SET_FILE_NAME can be repeated (e.g. for ADMM basis set)
# The following is a very UGLY solution working only for max 2 basis sets
basis_file1=$(grep -i "BASIS_SET_FILE_NAME " $input  | head -1 |  awk '{print $2}')
basis_file2=$(grep -i "BASIS_SET_FILE_NAME " $input  | tail -1 |  awk '{print $2}')

# When restarting with wavefunction...
wfn_file=$(grep -i "PROJECT " $input | awk '{print $2"-RESTART.wfn"}')
#When restarting with real time propagation
#In restart file, PROJECT_NAME is used instead of PROJECT only
wfn_rtpfile=$(grep -i "PROJECT_NAME " $input | awk '{print $2"-RESTART.rtpwfn"}')

cp ${input} $SCRDIR
cp ${coord_file} $SCRDIR
if [[ -f "$basis_file1" ]];then
   cp ${basis_file1} $SCRDIR
fi
if [[ -f "$basis_file2" ]];then
   cp ${basis_file2} $SCRDIR
fi
if [[ -f "$corepot_file" ]];then
   cp ${corepot_file} $SCRDIR
fi
if [[ -f "$wfn_file" ]];then
   cp ${wfn_file} $SCRDIR
fi
if [[ -f "$wfn_rtpfile" ]];then
   cp ${wfn_rtpfile} $SCRDIR
fi

cd $SCRDIR
 
if [[ $nproc -gt 1 ]];then
   $MPIRUN -np $nproc $CP2KEXE_MPI $input > $DIR/$input.out
else
   $CP2KEXE $input > $DIR/$input.out
fi

cd ../

cp -pr $SCRDIR $DIR

if [[ $? -ne "0" ]];then
  echo "Error when copying the data from scratch back to the server."
  echo "I will keep the directory $SCRDIR on node:"
  uname -a
  exit 1
fi

rm -r $SCRDIR

